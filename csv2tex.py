"""
csv2tex.py - process the CSV files for each section and emit the appropriate tex files

Why aren't we writing .tex files directly? Because we want to include the same data more than once,
differing only in sort order. In keeping with DRY, we write this once (in the CSV) and have this
utility handle the re-sort. 
"""

from glob import iglob as glob
import csv

def latexrow(lst):
	return ' & '.join(lst) + r" \\ \hline"

def emit(name, header, items):
	header = [r"\textbf{" + i + "}" for i in header] #boldface
	with open(name, 'w') as of:
		print(r"""
% AUTOMATICALLY GENERATED FILE
% Do not edit this file directly
% Instead, edit the .csv file from which it is generated

%\rowcolors{1}{white}{gray}
\begin{longtable}{@{}
                  r 
				  P{.7\textwidth} 
				  c
				  @{}}""", file=of)
		print(r"\hline", file=of)
		print(latexrow(header), file=of)
		print(r"\hline", file=of)
		print(r"\endfirsthead", file=of)
		print(r"\hline", file=of)
		print(latexrow(header), file=of)
		print(r"\hline", file=of)
		print(r"\endhead", file=of)
		for row in items:
			print(latexrow(row), file=of)
		print(r"\end{longtable}", file=of)
		
	print("	Wrote " + name)

def fixref(items):
	"Mark up the reference column of items. If empty, No Reference, otherwise \ref{item}"
	ret = []
	for row in items:
		a = row[0]
		b = row[1]
		if len(row) < 3 or len(row[2]) == 0:
			c = "No Reference"
		else:
			c = r"\ref{" + row[3] + "}"
		if len(row) >= 4 and len(row[3]) > 0:
			c += "-" + row[4]
		ret.append([a, b, c])
	return ret
	
for section in glob('section*.csv'):
	with open(section, 'r') as scsv:
		scsvr = csv.reader(scsv)
		header = next(scsvr)
		items = [record for record in scsvr]
	
	print("Read " + section)
	
	items = fixref(items)
	
	outan = section[:-4] + 'a.tex' # filename for first outputs
	emit(outan, header, items)
	
	outbn = section[:-4] + 'b.tex' # filename for second outputs
	# the second field in the CSV is the nomenclature
	emit(outbn, header, sorted(items, key=lambda record: record[1])) # sort records by nomenclature
